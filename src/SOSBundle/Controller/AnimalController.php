<?php

namespace SOSBundle\Controller;

use Symfony\Component\HttpFoundation\Request;
use SOSBundle\Form\AnimalType;
use SOSBundle\Form\AjoutAnimalType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use SOSBundle\Entity\Animal;
use GraphBundle\Entity\Stat;
use Ob\HighchartsBundle\Highcharts\Highchart;
use UserBundle\Entity\User;
use Zend\Json\Expr;


class AnimalController extends Controller
{
    public function ajoutAction(Request $request)
    {
        $animal = new Animal();
        $form = $this->createForm(AjoutAnimalType::class, $animal);
        $form->handleRequest($request);

        if ($form->isSubmitted()) {
            $file1 = $animal->getImage1();

            $fileName1 = $this->generateUniqueFileName() . '.' . $file1->guessExtension();


            $file1->move($this->getParameter('brochures_directory'), $fileName1);


            $animal->setImage1($fileName1);
            $file2 = $animal->getImage2();

            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();


            $file2->move($this->getParameter('brochures_directory'), $fileName2);


            $animal->setImage2($fileName2);
            $file3 = $animal->getImage3();

            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();


            $file3->move($this->getParameter('brochures_directory'), $fileName3);


            $animal->setImage3($fileName3);
            $file4 = $animal->getImage4();

            $fileName4 = $this->generateUniqueFileName() . '.' . $file4->guessExtension();


            $file4->move($this->getParameter('brochures_directory'), $fileName4);


            $animal->setImage4($fileName4);
            $em = $this->getDoctrine()->getManager();
            $animal->setType('SOS');
            $em->persist($animal);
            $em->flush();
        }

        return $this->render("@SOS/Management/ajout.html.twig", array("f" => $form->createView()));
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function adhererAction(Request $request)
    {
        $animal = new Animal();
        $form = $this->createForm(AjoutAnimalType::class, $animal);
        $form->handleRequest($request);

        if ($form->isSubmitted()) {
            $file1 = $animal->getImage1();

            $fileName1 = $this->generateUniqueFileName() . '.' . $file1->guessExtension();


            $file1->move($this->getParameter('brochures_directory'), $fileName1);


            $animal->setImage1($fileName1);
            $file2 = $animal->getImage2();

            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();


            $file2->move($this->getParameter('brochures_directory'), $fileName2);


            $animal->setImage2($fileName2);
            $file3 = $animal->getImage3();

            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();


            $file3->move($this->getParameter('brochures_directory'), $fileName3);


            $animal->setImage3($fileName3);
            $file4 = $animal->getImage4();

            $fileName4 = $this->generateUniqueFileName() . '.' . $file4->guessExtension();


            $file4->move($this->getParameter('brochures_directory'), $fileName4);


            $animal->setImage4($fileName4);
            $em = $this->getDoctrine()->getManager();
            $animal->setType('en Attente');
            $user = $this->getUser();
            $animal->setIduser($user->getId());
            $em->persist($animal);
            $em->flush();
        }

        return $this->render("@SOS/Adoption/adherer.html.twig", array("f" => $form->createView()));
    }

    public function listAction(Request $request)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $Form = $this->createForm(AnimalType::class, $animal);
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('espece' => $animal->getEspece(), 'sexe' => $animal->getSexe(), 'type' => 'SOS'));
        } else {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('type' => 'SOS'));
        }
        return $this->render("@SOS/Adoption/adopter.html.twig", array('f' => $Form->createView(), 'animals' => $animal));
    }

    public function listMAction(Request $request)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $Form = $this->createForm(AnimalType::class, $animal);
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('espece' => $animal->getEspece(), 'sexe' => $animal->getSexe(), 'race' => $animal->getRace()));
        } else {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findAll();
        }
        return $this->render("@SOS/Management/list.html.twig", array('f' => $Form->createView(), 'animals' => $animal));
    }

    public function deleteMAction(Request $request, $id)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle\Entity\Animal")->find($id);
        $em->remove($animal);
        $em->flush();
        return $this->redirectToRoute('backoffice_list');
    }
    public function deleteCAction(Request $request, $id)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle\Entity\Animal")->find($id);
        $em->remove($animal);
        $em->flush();
        return $this->redirectToRoute('client_animal');
    }

    public function reviewAction(Request $request, $id)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $Form = $this->createForm(AnimalType::class, $animal);
        $Form->handleRequest($request);
        $animal = $em->getRepository("SOSBundle\Entity\Animal")->find($id);

        return $this->render("@SOS/Adoption/reviewFront.html.twig", array('animal' => $animal));
    }

    public function rechercheAction(Request $request)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        if ($request->isMethod('POST')) {
            $nom = $request->get("nom");
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->recherche($nom);
            return $this->render("@SOS/Management/list.html.twig", array('animals' => $animal));
        }
    }

    public function validationAction()
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle:Animal")->findBy(array('type' => 'en Attente'));
        return $this->render("@SOS/Management/validation.html.twig", array('animals' => $animal));
    }

    public function validerAction(Request $request, $id)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle\Entity\Animal")->find($id);
        $animal->setType('SOS');
        $em->persist($animal);
        $em->flush();
        return $this->redirectToRoute('validation');
    }

    public function UpdateAction(Request $request, $id)
    {
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle:Animal")->find($id);
        $Form = $this->createForm(AjoutAnimalType::class, $animal);
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $file1 = $animal->getImage1();

            $fileName1 = $this->generateUniqueFileName() . '.' . $file1->guessExtension();


            $file1->move($this->getParameter('brochures_directory'), $fileName1);


            $animal->setImage1($fileName1);
            $file2 = $animal->getImage2();

            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();


            $file2->move($this->getParameter('brochures_directory'), $fileName2);


            $animal->setImage2($fileName2);
            $file3 = $animal->getImage3();

            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();


            $file3->move($this->getParameter('brochures_directory'), $fileName3);


            $animal->setImage3($fileName3);
            $file4 = $animal->getImage4();

            $fileName4 = $this->generateUniqueFileName() . '.' . $file4->guessExtension();


            $file4->move($this->getParameter('brochures_directory'), $fileName4);


            $animal->setImage4($fileName4);
            $em->persist($animal);
            $em->flush();
            return $this->redirectToRoute('backoffice_list');
        }

        return $this->render('@SOS/Management/update.html.twig',
            array('f' => $Form->createView()));
    }
    public function updateCAction(Request $request, $id)
    {
        $em = $this->getDoctrine()->getManager();
        $animal = $em->getRepository("SOSBundle:Animal")->find($id);
        $Form = $this->createForm(AjoutAnimalType::class, $animal);
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $file1 = $animal->getImage1();

            $fileName1 = $this->generateUniqueFileName() . '.' . $file1->guessExtension();


            $file1->move($this->getParameter('brochures_directory'), $fileName1);


            $animal->setImage1($fileName1);
            $file2 = $animal->getImage2();

            $fileName2 = $this->generateUniqueFileName() . '.' . $file2->guessExtension();


            $file2->move($this->getParameter('brochures_directory'), $fileName2);


            $animal->setImage2($fileName2);
            $file3 = $animal->getImage3();

            $fileName3 = $this->generateUniqueFileName() . '.' . $file3->guessExtension();


            $file3->move($this->getParameter('brochures_directory'), $fileName3);


            $animal->setImage3($fileName3);
            $file4 = $animal->getImage4();

            $fileName4 = $this->generateUniqueFileName() . '.' . $file4->guessExtension();


            $file4->move($this->getParameter('brochures_directory'), $fileName4);


            $animal->setImage4($fileName4);
            $em->persist($animal);
            $em->flush();
            return $this->redirectToRoute('client_animal');
        }

        return $this->render('@SOS/Adoption/updateClientAnimal.html.twig',
            array('f' => $Form->createView()));
    }

    public function listCAAction(Request $request, $id)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $Form = $this->createForm(AnimalType::class, $animal);
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('espece' => $animal->getEspece(), 'sexe' => $animal->getSexe(), 'race' => $animal->getRace(), 'iduser' => $id));
        } else {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('iduser' => $id));
        }
        return $this->render("@SOS/Management/list.html.twig", array('f' => $Form->createView(), 'animals' => $animal));
    }
    public function listCAmanageAction(Request $request)
    {
        $animal = new Animal();
        $em = $this->getDoctrine()->getManager();
        $Form = $this->createForm(AnimalType::class, $animal);
        $user = $this->getUser();
        $id=$user->getId();
        $Form->handleRequest($request);
        if ($Form->isValid()) {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('espece' => $animal->getEspece(), 'sexe' => $animal->getSexe(), 'race' => $animal->getRace(), 'iduser' => $id));
        } else {
            $animal = $em->getRepository("SOSBundle\Entity\Animal")->findBy(array('iduser' => $id));
        }
        return $this->render("@SOS/Adoption/clientAnimalList.html.twig", array('f' => $Form->createView(), 'animals' => $animal));
    }



}